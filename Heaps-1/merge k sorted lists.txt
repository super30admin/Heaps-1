/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        if(lists.length==0) return null;
     HashMap<Integer,Integer> map = new HashMap<>();
    for(int i=0;i<lists.length;i++)
    {
        ListNode temp=lists[i];
        while(temp!=null)
        {
            if(map.containsKey(temp.val))
            {
                int x=map.get(temp.val);
                map.put(temp.val,++x);
            }
            else
            {
                map.put(temp.val,1);
            }
            temp=temp.next;
        }
    }
        List<Integer> l = new ArrayList<Integer>(map.keySet());
        if(l.size()==0) return null;
        Collections.sort(l);
        ListNode fin=new ListNode(l.get(0));
        ListNode qwe=fin;
        //fin=fin.next;
    for(int i=0;i<l.size();i++)
    {
        int x=map.get(l.get(i));
        if(i==0) x--;
        while(x>0)
        {
           // fin.val=(l.get(i));
            fin.next=new ListNode(l.get(i));
            fin=fin.next;
            x--;
        }
    }
    return qwe;
    }
}