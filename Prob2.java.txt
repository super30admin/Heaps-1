/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        if(lists == null)
            return null;
        
        
        ListNode head = new ListNode(Integer.MIN_VALUE);
        
        for(ListNode list : lists){
            head = merge(head,list);
        }
        
        return head.next;
        
    }
    
    private ListNode merge(ListNode h1,ListNode h2){
        ListNode dummy = new ListNode();
        
        ListNode current = dummy;
        while(h1 != null && h2 != null){
            if(h1.val < h2.val){
                current.next = h1;
                h1 = h1.next;
            }else{
                current.next = h2;
                h2 = h2.next;
            }
            current = current.next;
        }
        
        while(h1 != null){
            current.next = h1;
            h1 = h1.next;
            current = current.next;
        }
        while(h2 != null){
            current.next = h2;
            h2 = h2.next;
            current = current.next;
        }
        
        return dummy.next;
    }
}