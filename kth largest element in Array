//TC = O(nlogk)
class Solution {
    public int findKthLargest(int[] nums, int k) {
        
        Queue<Integer> pq = new PriorityQueue<>();
        
        for(int num : nums){
         
            if(pq.size() == k){
                
                int kthLargest = pq.peek();
                
                if(num < kthLargest){
                    //ignore
                }
                else{
                    pq.remove();   //if incoming num is greater than k then remove small ele n add num
                    pq.add(num);
                }
            }else{
                pq.add(num);  //else add that number only 
            }
         
      }
        
        return pq.peek();   //topmost will be kth largest
    }
}
