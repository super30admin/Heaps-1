//time complexity : O(nlogk)
//space complexity: O(k)
using MinHeap
class KthLargestElementUsingMinHeap {
    public int findKthLargest(int[] nums, int k) {
        //by default min heap
        PriorityQueue<Integer> queue = new PriorityQueue<>();

        for(int num : nums){
            queue.add(num);
            if(queue.size()>k){
                queue.poll();
            }
        }
        return queue.poll();
    }
}
