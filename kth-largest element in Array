//TC: O(N)
//SC: O(k) -> Max size of heap would be k

//Approach: Idea is to use Heap/PriorityQueue and when size exceeds k, remove the root element and add new element

class Solution {
    public int findKthLargest(int[] nums, int k) {
        
        PriorityQueue<Integer> pQue = new PriorityQueue<>();
        for(int i = 0 ; i < nums.length ; i++){
            pQue.add(nums[i]);
            if(pQue.size() > k){
                pQue.remove();
            }
        }
        return pQue.remove();
    }
}
